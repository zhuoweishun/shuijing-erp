{
  "summary": {
    "frontendFields": 314,
    "backendFields": 2465,
    "namingIssues": 189,
    "mappingIssues": 1
  },
  "issues": {
    "naming": [
      {
        "type": "frontend_naming",
        "severity": "warning",
        "file": "src\\services\\api.ts",
        "line": 926,
        "field": "purchaseId",
        "expected": "purchase_id",
        "message": "前端字段应使用snake_case命名: purchaseId -> purchase_id",
        "context": "get: (purchaseId: string) => apiClient.get(`/inventory/${purchaseId}`),"
      },
      {
        "type": "frontend_naming",
        "severity": "warning",
        "file": "src\\services\\api.ts",
        "line": 929,
        "field": "getLowStockAlerts",
        "expected": "get_low_stock_alerts",
        "message": "前端字段应使用snake_case命名: getLowStockAlerts -> get_low_stock_alerts",
        "context": "getLowStockAlerts: () => apiClient.get('/inventory/alerts/low-stock'),"
      },
      {
        "type": "frontend_naming",
        "severity": "warning",
        "file": "src\\services\\api.ts",
        "line": 1006,
        "field": "updateProfile",
        "expected": "update_profile",
        "message": "前端字段应使用snake_case命名: updateProfile -> update_profile",
        "context": "updateProfile: (data: any) => apiClient.put('/users/profile', data),"
      },
      {
        "type": "frontend_naming",
        "severity": "warning",
        "file": "src\\services\\api.ts",
        "line": 1096,
        "field": "getData",
        "expected": "get_data",
        "message": "前端字段应使用snake_case命名: getData -> get_data",
        "context": "getData: () => apiClient.get('/dashboard'),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 208,
        "field": "price_per_bead",
        "expected": "pricePerBead",
        "message": "后端字段应使用camelCase命名: price_per_bead -> pricePerBead",
        "context": "price_per_bead: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 209,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 210,
        "field": "supplier_name",
        "expected": "supplierName",
        "message": "后端字段应使用camelCase命名: supplier_name -> supplierName",
        "context": "supplier_name: null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 228,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "sort_by = 'total_quantity'"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 322,
        "field": "product_types",
        "expected": "productTypes",
        "message": "后端字段应使用camelCase命名: product_types -> productTypes",
        "context": "const productTypesArray = Array.isArray(product_types) ? product_types : [product_types]"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 327,
        "field": "low_stock_only",
        "expected": "lowStockOnly",
        "message": "后端字段应使用camelCase命名: low_stock_only -> lowStockOnly",
        "context": "if (low_stock_only === 'true' && Number(item.is_low_stock) !== 1) return"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 347,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "product_type: productType,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 348,
        "field": "total_quantity",
        "expected": "totalQuantity",
        "message": "后端字段应使用camelCase命名: total_quantity -> totalQuantity",
        "context": "total_quantity: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 349,
        "field": "total_variants",
        "expected": "totalVariants",
        "message": "后端字段应使用camelCase命名: total_variants -> totalVariants",
        "context": "total_variants: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 350,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "has_low_stock: false,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 359,
        "field": "specification_value",
        "expected": "specificationValue",
        "message": "后端字段应使用camelCase命名: specification_value -> specificationValue",
        "context": "specification_value: specValue,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 360,
        "field": "specification_unit",
        "expected": "specificationUnit",
        "message": "后端字段应使用camelCase命名: specification_unit -> specificationUnit",
        "context": "specification_unit: specUnit,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 361,
        "field": "total_quantity",
        "expected": "totalQuantity",
        "message": "后端字段应使用camelCase命名: total_quantity -> totalQuantity",
        "context": "total_quantity: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 362,
        "field": "total_variants",
        "expected": "totalVariants",
        "message": "后端字段应使用camelCase命名: total_variants -> totalVariants",
        "context": "total_variants: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 363,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "has_low_stock: false,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 373,
        "field": "remaining_quantity",
        "expected": "remainingQuantity",
        "message": "后端字段应使用camelCase命名: remaining_quantity -> remainingQuantity",
        "context": "remaining_quantity: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 374,
        "field": "is_low_stock",
        "expected": "isLowStock",
        "message": "后端字段应使用camelCase命名: is_low_stock -> isLowStock",
        "context": "is_low_stock: false,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 375,
        "field": "weighted_price_per_unit",
        "expected": "weightedPricePerUnit",
        "message": "后端字段应使用camelCase命名: weighted_price_per_unit -> weightedPricePerUnit",
        "context": "weighted_price_per_unit: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 376,
        "field": "weighted_price_per_gram",
        "expected": "weightedPricePerGram",
        "message": "后端字段应使用camelCase命名: weighted_price_per_gram -> weightedPricePerGram",
        "context": "weighted_price_per_gram: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 389,
        "field": "is_low_stock",
        "expected": "isLowStock",
        "message": "后端字段应使用camelCase命名: is_low_stock -> isLowStock",
        "context": "level3.is_low_stock = level3.is_low_stock || isLowStock"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 392,
        "field": "purchase_id",
        "expected": "purchaseId",
        "message": "后端字段应使用camelCase命名: purchase_id -> purchaseId",
        "context": "purchase_id: item.purchase_id,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 393,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: item.product_name,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 394,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "product_type: item.product_type,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 395,
        "field": "purchase_date",
        "expected": "purchaseDate",
        "message": "后端字段应使用camelCase命名: purchase_date -> purchaseDate",
        "context": "purchase_date: item.purchase_date,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 396,
        "field": "supplier_name",
        "expected": "supplierName",
        "message": "后端字段应使用camelCase命名: supplier_name -> supplierName",
        "context": "supplier_name: item.supplier_name,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 397,
        "field": "original_quantity",
        "expected": "originalQuantity",
        "message": "后端字段应使用camelCase命名: original_quantity -> originalQuantity",
        "context": "original_quantity: originalQuantity,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 398,
        "field": "used_quantity",
        "expected": "usedQuantity",
        "message": "后端字段应使用camelCase命名: used_quantity -> usedQuantity",
        "context": "used_quantity: Number(item.used_quantity),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 399,
        "field": "remaining_quantity",
        "expected": "remainingQuantity",
        "message": "后端字段应使用camelCase命名: remaining_quantity -> remainingQuantity",
        "context": "remaining_quantity: remainingQuantity,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 400,
        "field": "price_per_unit",
        "expected": "pricePerUnit",
        "message": "后端字段应使用camelCase命名: price_per_unit -> pricePerUnit",
        "context": "price_per_unit: req.user.role === 'BOSS' ? Number(item.price_per_unit) : null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 401,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: req.user.role === 'BOSS' ? Number(item.price_per_gram) : null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 406,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "level2.has_low_stock = level2.has_low_stock || isLowStock"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 409,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "level1.has_low_stock = level1.has_low_stock || isLowStock"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 435,
        "field": "remaining_quantity",
        "expected": "remainingQuantity",
        "message": "后端字段应使用camelCase命名: remaining_quantity -> remainingQuantity",
        "context": "remaining_quantity: level3.remaining_quantity,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 436,
        "field": "is_low_stock",
        "expected": "isLowStock",
        "message": "后端字段应使用camelCase命名: is_low_stock -> isLowStock",
        "context": "is_low_stock: level3.is_low_stock,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 437,
        "field": "price_per_unit",
        "expected": "pricePerUnit",
        "message": "后端字段应使用camelCase命名: price_per_unit -> pricePerUnit",
        "context": "price_per_unit: req.user.role === 'BOSS' && totalWeightForUnit > 0"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 440,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: req.user.role === 'BOSS' && totalWeightForGram > 0"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 443,
        "field": "batch_count",
        "expected": "batchCount",
        "message": "后端字段应使用camelCase命名: batch_count -> batchCount",
        "context": "batch_count: level3.batches.length,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 448,
        "field": "total_variants",
        "expected": "totalVariants",
        "message": "后端字段应使用camelCase命名: total_variants -> totalVariants",
        "context": "level2.total_variants = qualitiesArray.length"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 450,
        "field": "specification_value",
        "expected": "specificationValue",
        "message": "后端字段应使用camelCase命名: specification_value -> specificationValue",
        "context": "specification_value: level2.specification_value,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 451,
        "field": "specification_unit",
        "expected": "specificationUnit",
        "message": "后端字段应使用camelCase命名: specification_unit -> specificationUnit",
        "context": "specification_unit: level2.specification_unit,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 452,
        "field": "total_quantity",
        "expected": "totalQuantity",
        "message": "后端字段应使用camelCase命名: total_quantity -> totalQuantity",
        "context": "total_quantity: level2.total_quantity,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 453,
        "field": "total_variants",
        "expected": "totalVariants",
        "message": "后端字段应使用camelCase命名: total_variants -> totalVariants",
        "context": "total_variants: level2.total_variants,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 454,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "has_low_stock: level2.has_low_stock,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 459,
        "field": "total_variants",
        "expected": "totalVariants",
        "message": "后端字段应使用camelCase命名: total_variants -> totalVariants",
        "context": "level1.total_variants = specificationsArray.reduce((sum, spec) => sum + spec.total_variants, 0)"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 461,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "product_type: level1.product_type,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 462,
        "field": "total_quantity",
        "expected": "totalQuantity",
        "message": "后端字段应使用camelCase命名: total_quantity -> totalQuantity",
        "context": "total_quantity: level1.total_quantity,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 463,
        "field": "total_variants",
        "expected": "totalVariants",
        "message": "后端字段应使用camelCase命名: total_variants -> totalVariants",
        "context": "total_variants: level1.total_variants,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 464,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "has_low_stock: level1.has_low_stock,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 470,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "const sortField = sort_by === 'product_type' ? 'product_type' : 'total_quantity'"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 475,
        "field": "total_quantity",
        "expected": "totalQuantity",
        "message": "后端字段应使用camelCase命名: total_quantity -> totalQuantity",
        "context": "return sort === 'asc' ? a.total_quantity - b.total_quantity : b.total_quantity - a.total_quantity"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 520,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "sort_by = 'product_name'"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 541,
        "field": "low_stock_only",
        "expected": "lowStockOnly",
        "message": "后端字段应使用camelCase命名: low_stock_only -> lowStockOnly",
        "context": "if (low_stock_only === 'true') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 591,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "ORDER BY ${sort_by === 'product_name' ? 'p.productName' : 'total_remaining_beads'} ${sort === 'asc' ? 'ASC' : 'DESC'}"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 679,
        "field": "bead_diameter",
        "expected": "beadDiameter",
        "message": "后端字段应使用camelCase命名: bead_diameter -> beadDiameter",
        "context": "bead_diameter: purchase.bead_diameter ? Number(purchase.bead_diameter) : null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 682,
        "field": "remaining_beads",
        "expected": "remainingBeads",
        "message": "后端字段应使用camelCase命名: remaining_beads -> remainingBeads",
        "context": "remaining_beads: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 683,
        "field": "total_original_beads",
        "expected": "totalOriginalBeads",
        "message": "后端字段应使用camelCase命名: total_original_beads -> totalOriginalBeads",
        "context": "total_original_beads: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 684,
        "field": "is_low_stock",
        "expected": "isLowStock",
        "message": "后端字段应使用camelCase命名: is_low_stock -> isLowStock",
        "context": "is_low_stock: false,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 685,
        "field": "weighted_price_per_bead",
        "expected": "weightedPricePerBead",
        "message": "后端字段应使用camelCase命名: weighted_price_per_bead -> weightedPricePerBead",
        "context": "weighted_price_per_bead: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 686,
        "field": "weighted_price_per_gram",
        "expected": "weightedPricePerGram",
        "message": "后端字段应使用camelCase命名: weighted_price_per_gram -> weightedPricePerGram",
        "context": "weighted_price_per_gram: 0,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 701,
        "field": "is_low_stock",
        "expected": "isLowStock",
        "message": "后端字段应使用camelCase命名: is_low_stock -> isLowStock",
        "context": "variant.is_low_stock = true"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 706,
        "field": "purchase_id",
        "expected": "purchaseId",
        "message": "后端字段应使用camelCase命名: purchase_id -> purchaseId",
        "context": "purchase_id: purchase.purchase_id,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 707,
        "field": "purchase_date",
        "expected": "purchaseDate",
        "message": "后端字段应使用camelCase命名: purchase_date -> purchaseDate",
        "context": "purchase_date: purchase.purchase_date,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 708,
        "field": "supplier_name",
        "expected": "supplierName",
        "message": "后端字段应使用camelCase命名: supplier_name -> supplierName",
        "context": "supplier_name: purchase.supplier_name,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 709,
        "field": "original_beads",
        "expected": "originalBeads",
        "message": "后端字段应使用camelCase命名: original_beads -> originalBeads",
        "context": "original_beads: originalBeads,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 710,
        "field": "used_beads",
        "expected": "usedBeads",
        "message": "后端字段应使用camelCase命名: used_beads -> usedBeads",
        "context": "used_beads: Number(purchase.used_beads),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 711,
        "field": "remaining_beads",
        "expected": "remainingBeads",
        "message": "后端字段应使用camelCase命名: remaining_beads -> remainingBeads",
        "context": "remaining_beads: remainingBeads,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 712,
        "field": "price_per_bead",
        "expected": "pricePerBead",
        "message": "后端字段应使用camelCase命名: price_per_bead -> pricePerBead",
        "context": "price_per_bead: req.user.role === 'BOSS' ? Number(purchase.price_per_bead) : null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 713,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: req.user.role === 'BOSS' ? Number(purchase.price_per_gram) : null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 737,
        "field": "bead_diameter",
        "expected": "beadDiameter",
        "message": "后端字段应使用camelCase命名: bead_diameter -> beadDiameter",
        "context": "bead_diameter: variant.bead_diameter,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 739,
        "field": "remaining_beads",
        "expected": "remainingBeads",
        "message": "后端字段应使用camelCase命名: remaining_beads -> remainingBeads",
        "context": "remaining_beads: variant.remaining_beads,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 740,
        "field": "is_low_stock",
        "expected": "isLowStock",
        "message": "后端字段应使用camelCase命名: is_low_stock -> isLowStock",
        "context": "is_low_stock: variant.is_low_stock,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 741,
        "field": "price_per_bead",
        "expected": "pricePerBead",
        "message": "后端字段应使用camelCase命名: price_per_bead -> pricePerBead",
        "context": "price_per_bead: req.user.role === 'BOSS' && totalWeightForBead > 0"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 744,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: req.user.role === 'BOSS' && totalWeightForGram > 0"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 747,
        "field": "batch_count",
        "expected": "batchCount",
        "message": "后端字段应使用camelCase命名: batch_count -> batchCount",
        "context": "batch_count: variant.batches.length,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 757,
        "field": "remaining_beads",
        "expected": "remainingBeads",
        "message": "后端字段应使用camelCase命名: remaining_beads -> remainingBeads",
        "context": "remaining_beads: v.remaining_beads,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 758,
        "field": "batch_count",
        "expected": "batchCount",
        "message": "后端字段应使用camelCase命名: batch_count -> batchCount",
        "context": "batch_count: v.batch_count,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 759,
        "field": "avg_price_per_bead",
        "expected": "avgPricePerBead",
        "message": "后端字段应使用camelCase命名: avg_price_per_bead -> avgPricePerBead",
        "context": "avg_price_per_bead: v.price_per_bead"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 764,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: group.product_name,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 765,
        "field": "variant_count",
        "expected": "variantCount",
        "message": "后端字段应使用camelCase命名: variant_count -> variantCount",
        "context": "variant_count: Number(group.variant_count),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 766,
        "field": "total_remaining_beads",
        "expected": "totalRemainingBeads",
        "message": "后端字段应使用camelCase命名: total_remaining_beads -> totalRemainingBeads",
        "context": "total_remaining_beads: Number(group.total_remaining_beads),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 767,
        "field": "has_low_stock",
        "expected": "hasLowStock",
        "message": "后端字段应使用camelCase命名: has_low_stock -> hasLowStock",
        "context": "has_low_stock: Number(group.has_low_stock) === 1,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 829,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "sort_by = 'purchase_date'"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 850,
        "field": "low_stock_only",
        "expected": "lowStockOnly",
        "message": "后端字段应使用camelCase命名: low_stock_only -> lowStockOnly",
        "context": "if (low_stock_only === 'true') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\inventory.ts",
        "line": 866,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "const sortField = validSortFields.includes(sort_by as string) ? sort_by : 'purchase_date'"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 11,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: z.string().min(1, '成品名称不能为空').max(200, '成品名称不能超过200字符'),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 13,
        "field": "purchase_id",
        "expected": "purchaseId",
        "message": "后端字段应使用camelCase命名: purchase_id -> purchaseId",
        "context": "purchase_id: z.string().min(1, '采购记录ID不能为空'),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 14,
        "field": "quantity_used_beads",
        "expected": "quantityUsedBeads",
        "message": "后端字段应使用camelCase命名: quantity_used_beads -> quantityUsedBeads",
        "context": "quantity_used_beads: z.number().int().positive('使用颗数必须是正整数')"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 16,
        "field": "selling_price",
        "expected": "sellingPrice",
        "message": "后端字段应使用camelCase命名: selling_price -> sellingPrice",
        "context": "selling_price: z.number().positive('销售价格必须大于0').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 52,
        "field": "sort_by",
        "expected": "sortBy",
        "message": "后端字段应使用camelCase命名: sort_by -> sortBy",
        "context": "sort_by = 'created_at',"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 53,
        "field": "sort_order",
        "expected": "sortOrder",
        "message": "后端字段应使用camelCase命名: sort_order -> sortOrder",
        "context": "sort_order = 'desc'"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 106,
        "field": "unit_price",
        "expected": "unitPrice",
        "message": "后端字段应使用camelCase命名: unit_price -> unitPrice",
        "context": "converted.unit_price = null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 107,
        "field": "total_value",
        "expected": "totalValue",
        "message": "后端字段应使用camelCase命名: total_value -> totalValue",
        "context": "converted.total_value = null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 205,
        "field": "total_cost",
        "expected": "totalCost",
        "message": "后端字段应使用camelCase命名: total_cost -> totalCost",
        "context": "total_cost: req.user.role === 'BOSS' ? Number(result.totalValue) : null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 251,
        "field": "unit_price",
        "expected": "unitPrice",
        "message": "后端字段应使用camelCase命名: unit_price -> unitPrice",
        "context": "converted.unit_price = null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 252,
        "field": "total_value",
        "expected": "totalValue",
        "message": "后端字段应使用camelCase命名: total_value -> totalValue",
        "context": "converted.total_value = null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 301,
        "field": "purchase_id",
        "expected": "purchaseId",
        "message": "后端字段应使用camelCase命名: purchase_id -> purchaseId",
        "context": "purchase_id: usage.purchaseId,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 302,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: usage.purchase.productName,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 303,
        "field": "bead_diameter",
        "expected": "beadDiameter",
        "message": "后端字段应使用camelCase命名: bead_diameter -> beadDiameter",
        "context": "bead_diameter: usage.purchase.beadDiameter,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 305,
        "field": "restored_quantity",
        "expected": "restoredQuantity",
        "message": "后端字段应使用camelCase命名: restored_quantity -> restoredQuantity",
        "context": "restored_quantity: usage.quantityUsedBeads"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 319,
        "field": "destroyed_product_id",
        "expected": "destroyedProductId",
        "message": "后端字段应使用camelCase命名: destroyed_product_id -> destroyedProductId",
        "context": "destroyed_product_id: id,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\products.ts",
        "line": 320,
        "field": "restored_materials",
        "expected": "restoredMaterials",
        "message": "后端字段应使用camelCase命名: restored_materials -> restoredMaterials",
        "context": "restored_materials: restoredMaterials"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 13,
        "field": "purchase_code",
        "expected": "purchaseCode",
        "message": "后端字段应使用camelCase命名: purchase_code -> purchaseCode",
        "context": "purchase_code: purchase.purchaseCode,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 14,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: purchase.productName,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 15,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "product_type: purchase.productType,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 16,
        "field": "unit_type",
        "expected": "unitType",
        "message": "后端字段应使用camelCase命名: unit_type -> unitType",
        "context": "unit_type: purchase.unitType,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 17,
        "field": "bead_diameter",
        "expected": "beadDiameter",
        "message": "后端字段应使用camelCase命名: bead_diameter -> beadDiameter",
        "context": "bead_diameter: purchase.beadDiameter,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 20,
        "field": "piece_count",
        "expected": "pieceCount",
        "message": "后端字段应使用camelCase命名: piece_count -> pieceCount",
        "context": "piece_count: purchase.pieceCount,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 21,
        "field": "min_stock_alert",
        "expected": "minStockAlert",
        "message": "后端字段应使用camelCase命名: min_stock_alert -> minStockAlert",
        "context": "min_stock_alert: purchase.minStockAlert,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 22,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: purchase.pricePerGram,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 23,
        "field": "unit_price",
        "expected": "unitPrice",
        "message": "后端字段应使用camelCase命名: unit_price -> unitPrice",
        "context": "unit_price: purchase.unitPrice,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 24,
        "field": "total_price",
        "expected": "totalPrice",
        "message": "后端字段应使用camelCase命名: total_price -> totalPrice",
        "context": "total_price: purchase.totalPrice,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 26,
        "field": "beads_per_string",
        "expected": "beadsPerString",
        "message": "后端字段应使用camelCase命名: beads_per_string -> beadsPerString",
        "context": "beads_per_string: purchase.beadsPerString,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 27,
        "field": "total_beads",
        "expected": "totalBeads",
        "message": "后端字段应使用camelCase命名: total_beads -> totalBeads",
        "context": "total_beads: purchase.totalBeads,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 28,
        "field": "price_per_bead",
        "expected": "pricePerBead",
        "message": "后端字段应使用camelCase命名: price_per_bead -> pricePerBead",
        "context": "price_per_bead: purchase.pricePerBead,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 30,
        "field": "purchase_date",
        "expected": "purchaseDate",
        "message": "后端字段应使用camelCase命名: purchase_date -> purchaseDate",
        "context": "purchase_date: purchase.purchaseDate,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 33,
        "field": "natural_language_input",
        "expected": "naturalLanguageInput",
        "message": "后端字段应使用camelCase命名: natural_language_input -> naturalLanguageInput",
        "context": "natural_language_input: purchase.naturalLanguageInput,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 34,
        "field": "ai_recognition_result",
        "expected": "aiRecognitionResult",
        "message": "后端字段应使用camelCase命名: ai_recognition_result -> aiRecognitionResult",
        "context": "ai_recognition_result: purchase.aiRecognitionResult,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 36,
        "field": "created_at",
        "expected": "createdAt",
        "message": "后端字段应使用camelCase命名: created_at -> createdAt",
        "context": "created_at: purchase.createdAt,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 37,
        "field": "updated_at",
        "expected": "updatedAt",
        "message": "后端字段应使用camelCase命名: updated_at -> updatedAt",
        "context": "updated_at: purchase.updatedAt,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 38,
        "field": "supplier_id",
        "expected": "supplierId",
        "message": "后端字段应使用camelCase命名: supplier_id -> supplierId",
        "context": "supplier_id: purchase.supplierId,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 47,
        "field": "user_id",
        "expected": "userId",
        "message": "后端字段应使用camelCase命名: user_id -> userId",
        "context": "user_id: purchase.userId,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 53,
        "field": "edit_logs",
        "expected": "editLogs",
        "message": "后端字段应使用camelCase命名: edit_logs -> editLogs",
        "context": "edit_logs: purchase.editLogs"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 59,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: z.string().min(1, '产品名称不能为空').max(200, '产品名称不能超过200字符'),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 60,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "product_type: z.enum(['LOOSE_BEADS', 'BRACELET', 'ACCESSORIES', 'FINISHED']).default('BRACELET'),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 61,
        "field": "unit_type",
        "expected": "unitType",
        "message": "后端字段应使用camelCase命名: unit_type -> unitType",
        "context": "unit_type: z.enum(['PIECES', 'STRINGS', 'SLICES', 'ITEMS']).default('STRINGS'),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 62,
        "field": "bead_diameter",
        "expected": "beadDiameter",
        "message": "后端字段应使用camelCase命名: bead_diameter -> beadDiameter",
        "context": "bead_diameter: z.number().positive('珠子直径必须大于0').optional(), // 散珠和手串必填，其他可选"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 65,
        "field": "piece_count",
        "expected": "pieceCount",
        "message": "后端字段应使用camelCase命名: piece_count -> pieceCount",
        "context": "piece_count: z.number().int().positive('数量必须是正整数').optional(), // 散珠颗数/饰品片数/成品件数"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 66,
        "field": "min_stock_alert",
        "expected": "minStockAlert",
        "message": "后端字段应使用camelCase命名: min_stock_alert -> minStockAlert",
        "context": "min_stock_alert: z.number().int().positive('最低预警颗数必须是正整数').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 67,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: z.number().positive('克价必须大于0').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 68,
        "field": "total_price",
        "expected": "totalPrice",
        "message": "后端字段应使用camelCase命名: total_price -> totalPrice",
        "context": "total_price: z.number().positive('总价必须大于0').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 73,
        "field": "natural_language_input",
        "expected": "naturalLanguageInput",
        "message": "后端字段应使用camelCase命名: natural_language_input -> naturalLanguageInput",
        "context": "natural_language_input: z.string().max(2000, '自然语言输入不能超过2000字符').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 74,
        "field": "supplier_name",
        "expected": "supplierName",
        "message": "后端字段应使用camelCase命名: supplier_name -> supplierName",
        "context": "supplier_name: z.string().optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 75,
        "field": "ai_recognition_result",
        "expected": "aiRecognitionResult",
        "message": "后端字段应使用camelCase命名: ai_recognition_result -> aiRecognitionResult",
        "context": "ai_recognition_result: z.any().optional()"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 78,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "if (data.product_type === 'LOOSE_BEADS' || data.product_type === 'BRACELET') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 78,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "if (data.product_type === 'LOOSE_BEADS' || data.product_type === 'BRACELET') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 81,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "if (data.product_type === 'ACCESSORIES' || data.product_type === 'FINISHED') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 81,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "if (data.product_type === 'ACCESSORIES' || data.product_type === 'FINISHED') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 193,
        "field": "product_types",
        "expected": "productTypes",
        "message": "后端字段应使用camelCase命名: product_types -> productTypes",
        "context": "const selectedTypes = Array.isArray(product_types) ? product_types : [product_types];"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 245,
        "field": "product_types",
        "expected": "productTypes",
        "message": "后端字段应使用camelCase命名: product_types -> productTypes",
        "context": "const types = Array.isArray(product_types) ? product_types : [product_types];"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 312,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 313,
        "field": "total_price",
        "expected": "totalPrice",
        "message": "后端字段应使用camelCase命名: total_price -> totalPrice",
        "context": "total_price: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 315,
        "field": "unit_price",
        "expected": "unitPrice",
        "message": "后端字段应使用camelCase命名: unit_price -> unitPrice",
        "context": "unit_price: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 316,
        "field": "price_per_bead",
        "expected": "pricePerBead",
        "message": "后端字段应使用camelCase命名: price_per_bead -> pricePerBead",
        "context": "price_per_bead: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 317,
        "field": "supplier_id",
        "expected": "supplierId",
        "message": "后端字段应使用camelCase命名: supplier_id -> supplierId",
        "context": "supplier_id: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 319,
        "field": "ai_recognition_result",
        "expected": "aiRecognitionResult",
        "message": "后端字段应使用camelCase命名: ai_recognition_result -> aiRecognitionResult",
        "context": "ai_recognition_result: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 320,
        "field": "natural_language_input",
        "expected": "naturalLanguageInput",
        "message": "后端字段应使用camelCase命名: natural_language_input -> naturalLanguageInput",
        "context": "natural_language_input: null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 377,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "if (validatedData.product_type === 'LOOSE_BEADS') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 382,
        "field": "piece_count",
        "expected": "pieceCount",
        "message": "后端字段应使用camelCase命名: piece_count -> pieceCount",
        "context": "pricePerBead = validatedData.total_price ? validatedData.total_price / validatedData.piece_count : undefined"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 384,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "} else if (validatedData.product_type === 'BRACELET') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 392,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "} else if (validatedData.product_type === 'ACCESSORIES') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 395,
        "field": "piece_count",
        "expected": "pieceCount",
        "message": "后端字段应使用camelCase命名: piece_count -> pieceCount",
        "context": "unitPrice = validatedData.total_price ? validatedData.total_price / validatedData.piece_count : undefined"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 397,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "} else if (validatedData.product_type === 'FINISHED') {"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 400,
        "field": "piece_count",
        "expected": "pieceCount",
        "message": "后端字段应使用camelCase命名: piece_count -> pieceCount",
        "context": "unitPrice = validatedData.total_price ? validatedData.total_price / validatedData.piece_count : undefined"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 524,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 525,
        "field": "total_price",
        "expected": "totalPrice",
        "message": "后端字段应使用camelCase命名: total_price -> totalPrice",
        "context": "total_price: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 527,
        "field": "unit_price",
        "expected": "unitPrice",
        "message": "后端字段应使用camelCase命名: unit_price -> unitPrice",
        "context": "unit_price: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 528,
        "field": "price_per_bead",
        "expected": "pricePerBead",
        "message": "后端字段应使用camelCase命名: price_per_bead -> pricePerBead",
        "context": "price_per_bead: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 529,
        "field": "supplier_id",
        "expected": "supplierId",
        "message": "后端字段应使用camelCase命名: supplier_id -> supplierId",
        "context": "supplier_id: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 531,
        "field": "ai_recognition_result",
        "expected": "aiRecognitionResult",
        "message": "后端字段应使用camelCase命名: ai_recognition_result -> aiRecognitionResult",
        "context": "ai_recognition_result: null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 532,
        "field": "natural_language_input",
        "expected": "naturalLanguageInput",
        "message": "后端字段应使用camelCase命名: natural_language_input -> naturalLanguageInput",
        "context": "natural_language_input: null"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 544,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: z.string().min(1, '产品名称不能为空').max(200, '产品名称不能超过200字符').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 545,
        "field": "bead_diameter",
        "expected": "beadDiameter",
        "message": "后端字段应使用camelCase命名: bead_diameter -> beadDiameter",
        "context": "bead_diameter: z.number().positive('珠子直径必须大于0').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 547,
        "field": "price_per_gram",
        "expected": "pricePerGram",
        "message": "后端字段应使用camelCase命名: price_per_gram -> pricePerGram",
        "context": "price_per_gram: z.number().positive('克价必须大于0').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 548,
        "field": "total_price",
        "expected": "totalPrice",
        "message": "后端字段应使用camelCase命名: total_price -> totalPrice",
        "context": "total_price: z.number().positive('总价必须大于0').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 550,
        "field": "beads_per_string",
        "expected": "beadsPerString",
        "message": "后端字段应使用camelCase命名: beads_per_string -> beadsPerString",
        "context": "beads_per_string: z.number().int().positive('每串颗数必须是正整数').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 551,
        "field": "total_beads",
        "expected": "totalBeads",
        "message": "后端字段应使用camelCase命名: total_beads -> totalBeads",
        "context": "total_beads: z.number().int().positive('总计颗数必须是正整数').optional(),"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 554,
        "field": "supplier_name",
        "expected": "supplierName",
        "message": "后端字段应使用camelCase命名: supplier_name -> supplierName",
        "context": "supplier_name: z.string().optional()"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 933,
        "field": "purchase_code",
        "expected": "purchaseCode",
        "message": "后端字段应使用camelCase命名: purchase_code -> purchaseCode",
        "context": "purchase_code: purchase.purchaseCode,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 934,
        "field": "product_name",
        "expected": "productName",
        "message": "后端字段应使用camelCase命名: product_name -> productName",
        "context": "product_name: purchase.productName,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 935,
        "field": "product_type",
        "expected": "productType",
        "message": "后端字段应使用camelCase命名: product_type -> productType",
        "context": "product_type: purchase.productType,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 937,
        "field": "quality_type",
        "expected": "qualityType",
        "message": "后端字段应使用camelCase命名: quality_type -> qualityType",
        "context": "quality_type: typeof purchase.quality,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 938,
        "field": "quality_is_null",
        "expected": "qualityIsNull",
        "message": "后端字段应使用camelCase命名: quality_is_null -> qualityIsNull",
        "context": "quality_is_null: purchase.quality === null,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 939,
        "field": "quality_is_undefined",
        "expected": "qualityIsUndefined",
        "message": "后端字段应使用camelCase命名: quality_is_undefined -> qualityIsUndefined",
        "context": "quality_is_undefined: purchase.quality === undefined,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\purchases.ts",
        "line": 940,
        "field": "quality_stringified",
        "expected": "qualityStringified",
        "message": "后端字段应使用camelCase命名: quality_stringified -> qualityStringified",
        "context": "quality_stringified: JSON.stringify(purchase.quality)"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\users.ts",
        "line": 27,
        "field": "is_active",
        "expected": "isActive",
        "message": "后端字段应使用camelCase命名: is_active -> isActive",
        "context": "is_active: z.boolean().optional()"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\users.ts",
        "line": 48,
        "field": "is_active",
        "expected": "isActive",
        "message": "后端字段应使用camelCase命名: is_active -> isActive",
        "context": "is_active: user.isActive,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\users.ts",
        "line": 49,
        "field": "last_login_at",
        "expected": "lastLoginAt",
        "message": "后端字段应使用camelCase命名: last_login_at -> lastLoginAt",
        "context": "last_login_at: user.lastLoginAt,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\users.ts",
        "line": 50,
        "field": "created_at",
        "expected": "createdAt",
        "message": "后端字段应使用camelCase命名: created_at -> createdAt",
        "context": "created_at: user.createdAt,"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\users.ts",
        "line": 51,
        "field": "updated_at",
        "expected": "updatedAt",
        "message": "后端字段应使用camelCase命名: updated_at -> updatedAt",
        "context": "updated_at: user.updatedAt"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\routes\\users.ts",
        "line": 534,
        "field": "deleted_user_id",
        "expected": "deletedUserId",
        "message": "后端字段应使用camelCase命名: deleted_user_id -> deletedUserId",
        "context": "deleted_user_id: id"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\services\\ai.ts",
        "line": 213,
        "field": "max_tokens",
        "expected": "maxTokens",
        "message": "后端字段应使用camelCase命名: max_tokens -> maxTokens",
        "context": "max_tokens: 1000"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\services\\ai.ts",
        "line": 320,
        "field": "max_tokens",
        "expected": "maxTokens",
        "message": "后端字段应使用camelCase命名: max_tokens -> maxTokens",
        "context": "max_tokens: 1000"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\services\\ai.ts",
        "line": 418,
        "field": "max_tokens",
        "expected": "maxTokens",
        "message": "后端字段应使用camelCase命名: max_tokens -> maxTokens",
        "context": "max_tokens: 1500"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\services\\ai.ts",
        "line": 529,
        "field": "max_tokens",
        "expected": "maxTokens",
        "message": "后端字段应使用camelCase命名: max_tokens -> maxTokens",
        "context": "max_tokens: 2000"
      },
      {
        "type": "backend_naming",
        "severity": "warning",
        "file": "backend\\src\\utils\\updateImageUrls.ts",
        "line": 19,
        "field": "array_contains",
        "expected": "arrayContains",
        "message": "后端字段应使用camelCase命名: array_contains -> arrayContains",
        "context": "array_contains: `http://${oldIP}:3001`"
      }
    ],
    "mapping": [
      {
        "type": "missing_mapping",
        "severity": "error",
        "file": "src\\services\\api.ts",
        "message": "缺少convertToApiFormat字段转换函数"
      }
    ]
  }
}