{
  "timestamp": "2025-09-13T13:28:43.718746",
  "total_files_processed": 7,
  "total_fixes_applied": 176,
  "fixes_by_category": {
    "req_parameter_restoration": 42,
    "field_naming_fixes": 134
  },
  "files_modified": [
    "src/routes/products.ts",
    "src/routes/purchases.ts",
    "src/routes/skus.ts",
    "src/routes/financial.ts",
    "src/routes/inventory.ts"
  ],
  "detailed_changes": [
    {
      "file": "src/routes/products.ts",
      "category": "req_parameter_restoration",
      "count": 8,
      "changes": [
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/materials', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/:id', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.delete('/:id/destroy', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.put('/:id', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.post('/cost', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.post('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.post('/batch', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        }
      ]
    },
    {
      "file": "src/routes/purchases.ts",
      "category": "req_parameter_restoration",
      "count": 7,
      "changes": [
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/debug/raw-data', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.post('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/:id', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.put('/:id', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.delete('/:id', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/debug/quality/:purchase_code', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        }
      ]
    },
    {
      "file": "src/routes/skus.ts",
      "category": "req_parameter_restoration",
      "count": 6,
      "changes": [
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.post('/:id/adjust', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.post('/:id/sell', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/:id/history', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/stats/overview', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/:id/traces', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        }
      ]
    },
    {
      "file": "src/routes/skus.ts",
      "category": "field_naming_fixes",
      "count": 17,
      "changes": [
        {
          "type": "field_naming",
          "field": "productType",
          "new_field": "product_type",
          "count": 2,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "pricePerBead",
          "new_field": "price_per_bead",
          "count": 4,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "unitPrice",
          "new_field": "unit_price",
          "count": 4,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "skuName",
          "new_field": "sku_name",
          "count": 1,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "pricePerGram",
          "new_field": "price_per_gram",
          "count": 4,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "pricePerPiece",
          "new_field": "price_per_piece",
          "count": 2,
          "pattern": "对象属性访问"
        }
      ]
    },
    {
      "file": "src/routes/financial.ts",
      "category": "req_parameter_restoration",
      "count": 8,
      "changes": [
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/records', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/transactions', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/overview', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/overview/summary', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/statistics', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/statistics/data', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/inventory/status', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        }
      ]
    },
    {
      "file": "src/routes/inventory.ts",
      "category": "req_parameter_restoration",
      "count": 13,
      "changes": [
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/debug', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/hierarchical', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/grouped', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/search', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/finished-products-cards', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/statistics', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/product-distribution', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/consumption-analysis', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/price-distribution', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/:purchase_id', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/alerts/low-stock', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        },
        {
          "type": "req_parameter_restoration",
          "line_content": "router.get('/export/excel', authenticateToken, asyncHandler(async (_, res) =>",
          "change": "将参数 _ 恢复为 req"
        }
      ]
    },
    {
      "file": "src/routes/inventory.ts",
      "category": "field_naming_fixes",
      "count": 117,
      "changes": [
        {
          "type": "field_naming",
          "field": "productType",
          "new_field": "product_type",
          "count": 83,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "pricePerBead",
          "new_field": "price_per_bead",
          "count": 15,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "unitPrice",
          "new_field": "unit_price",
          "count": 7,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "pricePerGram",
          "new_field": "price_per_gram",
          "count": 10,
          "pattern": "对象属性访问"
        },
        {
          "type": "field_naming",
          "field": "pricePerPiece",
          "new_field": "price_per_piece",
          "count": 2,
          "pattern": "对象属性访问"
        }
      ]
    }
  ],
  "errors": []
}