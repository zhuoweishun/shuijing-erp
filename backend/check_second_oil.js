import mysql from 'mysql2/promise';

async function checkSecondOil() {
  const connection = await mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'ZWSloveWCC123',
    database: 'crystal_erp_dev'
  });
  
  try {
    console.log('üîç Ê£ÄÊü•Á¨¨‰∫å‰∏™Ê≤πËÉÜÊùêÊñôÁöÑËØ¶ÁªÜÊÉÖÂÜµ...');
    
    // Êü•ËØ¢Á¨¨‰∫å‰∏™Ê≤πËÉÜÁöÑËØ¶ÁªÜ‰ø°ÊÅØ
    const materialId = 'mat_b8ef550f_1758090594';
    
    const [materialInfo] = await connection.execute(`
      SELECT 
        id,
        material_name,
        material_type,
        original_quantity,
        used_quantity,
        remaining_quantity,
        unit_cost,
        created_at
      FROM materials
      WHERE id = ?
    `, [materialId]);
    
    if (materialInfo.length > 0) {
      const material = materialInfo[0];
      console.log('\nüì¶ Á¨¨‰∫å‰∏™Ê≤πËÉÜÊùêÊñô‰ø°ÊÅØ:');
      console.log('- material_id:', material.id);
      console.log('- material_name:', material.material_name);
      console.log('- material_type:', material.material_type);
      console.log('- original_quantity:', material.original_quantity);
      console.log('- used_quantity:', material.used_quantity);
      console.log('- remaining_quantity:', material.remaining_quantity);
      console.log('- unit_cost:', material.unit_cost);
      console.log('- created_at:', material.created_at);
      
      // ËÆ°ÁÆóÂ∫îËØ•ÁöÑÂâ©‰ΩôÂ∫ìÂ≠ò
      const calculatedRemaining = Number(material.original_quantity) - Number(material.used_quantity);
      console.log('- ËÆ°ÁÆóÁöÑÂâ©‰ΩôÂ∫ìÂ≠ò:', calculatedRemaining);
      
      if (calculatedRemaining !== Number(material.remaining_quantity)) {
        console.log('‚ö†Ô∏è Â∫ìÂ≠òÊï∞ÊçÆ‰∏ç‰∏ÄËá¥ÔºÅ');
      } else {
        console.log('‚úÖ Â∫ìÂ≠òÊï∞ÊçÆ‰∏ÄËá¥');
      }
    }
    
    // Êü•ËØ¢Ëøô‰∏™ÊùêÊñôÁöÑÊâÄÊúâ‰ΩøÁî®ËÆ∞ÂΩï
    const [usageRecords] = await connection.execute(`
      SELECT 
        mu.id,
        mu.sku_id,
        mu.quantity_used,
        mu.action,
        mu.created_at,
        ps.sku_code,
        ps.sku_name
      FROM material_usage mu
      LEFT JOIN product_skus ps ON mu.sku_id = ps.id
      WHERE mu.material_id = ?
      ORDER BY mu.created_at
    `, [materialId]);
    
    console.log(`\nüìã Á¨¨‰∫å‰∏™Ê≤πËÉÜÁöÑ‰ΩøÁî®ËÆ∞ÂΩï (${usageRecords.length}Êù°):`);
    usageRecords.forEach((usage, index) => {
      console.log(`\nËÆ∞ÂΩï ${index + 1}:`);
      console.log('- usage_id:', usage.id);
      console.log('- sku_id:', usage.sku_id);
      console.log('- sku_code:', usage.sku_code);
      console.log('- sku_name:', usage.sku_name);
      console.log('- quantity_used:', usage.quantity_used);
      console.log('- action:', usage.action);
      console.log('- created_at:', usage.created_at);
    });
    
    // ËÆ°ÁÆóÊÄª‰ΩøÁî®Èáè
    const totalUsed = usageRecords.reduce((sum, record) => sum + Number(record.quantity_used), 0);
    console.log('\nüîç ‰ΩøÁî®ÈáèÁªüËÆ°:');
    console.log('- MaterialUsageËÆ∞ÂΩïÊÄª‰ΩøÁî®Èáè:', totalUsed);
    console.log('- MaterialsË°®‰∏≠ÁöÑused_quantity:', materialInfo[0]?.used_quantity);
    
    // Ê£ÄÊü•ÊòØÂê¶Â≠òÂú®Â∫ìÂ≠òÊõ¥Êñ∞ÁöÑÈóÆÈ¢ò
    if (totalUsed !== Number(materialInfo[0]?.used_quantity)) {
      console.log('‚ö†Ô∏è ‰ΩøÁî®Èáè‰∏ç‰∏ÄËá¥ÔºÅËøôÂèØËÉΩÊòØÂ∫ìÂ≠òÊõ¥Êñ∞ÈÄªËæëÁöÑÈóÆÈ¢ò„ÄÇ');
    }
    
    // Êü•ËØ¢ÊâÄÊúâÊ≤πËÉÜÊùêÊñôÔºåÁúãÁúãÁî®Êà∑ÂèØËÉΩÁúãÂà∞ÁöÑÊòØÂì™‰∏™
    const [allOils] = await connection.execute(`
      SELECT 
        id,
        material_name,
        original_quantity,
        used_quantity,
        remaining_quantity
      FROM materials
      WHERE material_name LIKE '%Ê≤πËÉÜ%'
      ORDER BY created_at
    `);
    
    console.log('\nüìã ÊâÄÊúâÊ≤πËÉÜÊùêÊñô:');
    allOils.forEach((oil, index) => {
      console.log(`\nÊ≤πËÉÜ ${index + 1}:`);
      console.log('- material_id:', oil.id);
      console.log('- material_name:', oil.material_name);
      console.log('- original_quantity:', oil.original_quantity);
      console.log('- used_quantity:', oil.used_quantity);
      console.log('- remaining_quantity:', oil.remaining_quantity);
    });
    
  } catch (error) {
    console.error('‚ùå Êü•ËØ¢Â§±Ë¥•:', error);
  } finally {
    await connection.end();
  }
}

checkSecondOil();